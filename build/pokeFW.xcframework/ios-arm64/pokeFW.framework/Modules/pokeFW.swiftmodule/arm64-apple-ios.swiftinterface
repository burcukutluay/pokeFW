// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name pokeFW
import Alamofire
import AlamofireImage
import AudioToolbox.AudioServices
import AudioToolbox
import CodableAlamofire
import CoreTelephony
import Foundation
import Swift
import UIKit
@_exported import pokeFW
public protocol InfoViewDelegate : AnyObject {
  func viewShouldReturn(view: pokeFW.InfoView, height: CoreGraphics.CGFloat)
  func emptyViewShouldReturn(errorMessage: Swift.String, type: Swift.String)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers public class InfoView : UIKit.UIView {
  public var descriptionText: Swift.String
  public var descriptionImageURL: Foundation.URL?
  weak public var infoViewDelegate: pokeFW.InfoViewDelegate?
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
  public func getAndSetResultView(keyword: Swift.String)
  public func deleteSubviews()
  @objc deinit
}
extension UIColor {
  public static func colorFromRGB(red: Swift.Int, green: Swift.Int, blue: Swift.Int) -> UIKit.UIColor
}
extension UIColor {
  public struct ColorPalette {
  }
}
extension Array where Element : Swift.Equatable {
  public func unique() -> Swift.Array<Element>
}
extension UIDevice {
  final public func hasConnection() -> Swift.Bool
  public var deviceOperator: Swift.String {
    get
  }
  public var deviceOS: Swift.String {
    get
  }
  public var deviceID: Swift.String {
    get
  }
  public var deviceLanguage: Swift.String {
    get
  }
  public var deviceModel: Swift.String {
    get
  }
}
